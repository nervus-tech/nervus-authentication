name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: nervus_user
          POSTGRES_PASSWORD: secure_password
          POSTGRES_DB: nervus
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Install PostgreSQL Client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Create Schema and Table
        run: |
          psql -h localhost -U nervus_user -d nervus -c "CREATE SCHEMA IF NOT EXISTS auth;"
          psql -h localhost -U nervus_user -d nervus -c "CREATE TABLE IF NOT EXISTS auth.users (
            id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            username VARCHAR(255),
            email VARCHAR(255),
            password VARCHAR(255)
          );"

      - name: Build with Maven
        run: mvn clean install -f authentication/pom.xml

      - name: Run Tests
        run: mvn test -f authentication/pom.xml

      - name: Build Docker Image
        run: |
          cd authentication
          docker build -t nervus-authentication:latest .

      - name: Test Docker Container
        run: |
          cd authentication
          docker run -d --name test-container -p 8080:8080 --link postgres:postgres -e SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/nervus nervus-authentication:latest
          sleep 15
          docker exec test-container curl http://localhost:8080/api/users || exit 1
          docker stop test-container
          docker rm test-container

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Local Docker
        run: |
          cd authentication
          docker stop nervus-authentication || true
          docker rm nervus-authentication || true
          docker run -d -p 8080:8080 --name nervus-authentication nervus-authentication:latest